package practice.AdvancedDSA.BinarySearch;

import java.util.ArrayList;
import java.util.Arrays;

public class UniqueElementUsingBS {
    public static void main(String[] args) {
//        ArrayList<Integer> A = new ArrayList<>(Arrays.asList(13, 13, 21, 21, 27, 50, 50, 102, 102, 108, 108, 110, 110, 117, 117, 120, 120, 123, 123, 124, 124, 132, 132, 164, 164, 166, 166, 190, 190, 200, 200, 212, 212, 217, 217, 225, 225, 238, 238, 261, 261, 276, 276, 347, 347, 348, 348, 386, 386, 394, 394, 405, 405, 426, 426, 435, 435, 474, 474, 493, 493 ));
        ArrayList<Integer> A = new ArrayList<>(Arrays.asList(512, 512, 519, 519, 527, 527, 528, 528, 538, 538, 544, 544, 557, 557, 586, 586, 589, 589, 602, 602, 618, 618, 629, 629, 630, 630, 658, 658, 672, 672, 680, 680, 694, 694, 695, 695, 708, 708, 713, 713, 720, 720, 731, 731, 735, 735, 748, 748, 750, 750, 779, 779, 801, 801, 815, 815, 840, 840, 854, 854, 868, 868, 875, 875, 879, 879, 881, 881, 912, 912, 929, 929, 935, 935, 968, 968, 971, 971, 979, 979, 982, 982, 983, 983, 987, 987, 994, 994, 1038, 1038, 1039, 1039, 1044, 1044, 1047, 1047, 1057, 1057, 1059, 1059, 1079, 1079, 1111, 1111, 1115, 1115, 1117, 1117, 1130, 1130, 1143, 1143, 1145, 1145, 1150, 1150, 1156, 1156, 1162, 1162, 1164, 1164, 1170, 1170, 1174, 1174, 1177, 1177, 1179, 1179, 1184, 1184, 1189, 1189, 1191, 1191, 1194, 1194, 1209, 1209, 1210, 1210, 1238, 1238, 1244, 1244, 1249, 1249, 1252, 1252, 1257, 1257, 1320, 1320, 1327, 1327, 1359, 1359, 1360, 1360, 1361, 1361, 1365, 1365, 1368, 1368, 1376, 1376, 1387, 1387, 1400, 1400, 1403, 1403, 1406, 1406, 1409, 1409, 1413, 1413, 1427, 1427, 1433, 1433, 1442, 1442, 1443, 1443, 1449, 1449, 1451, 1451, 1453, 1453, 1455, 1455, 1458, 1458, 1471, 1471, 1479, 1479, 1481, 1481, 1482, 1482, 1488, 1488, 1489, 1489, 1491, 1491, 1510, 1510, 1511, 1511, 1515, 1515, 1517, 1517, 1525, 1525, 1529, 1529, 1530, 1530, 1534, 1534, 1577, 1577, 1581, 1581, 1582, 1582, 1593, 1593, 1595, 1595, 1602, 1602, 1606, 1615, 1615, 1635, 1635, 1642, 1642, 1665, 1665, 1681, 1681, 1693, 1693, 1695, 1695, 1709, 1709, 1716, 1716, 1717, 1717, 1719, 1719, 1736, 1736, 1744, 1744, 1772, 1772, 1776, 1776, 1784, 1784, 1787, 1787, 1788, 1788, 1809, 1809, 1825, 1825, 1843, 1843, 1860, 1860, 1861, 1861, 1865, 1865, 1873, 1873, 1892, 1892, 1903, 1903, 1904, 1904, 1915, 1915, 1918, 1918, 1929, 1929, 1937, 1937, 1943, 1943, 1945, 1945, 1953, 1953, 1965, 1965, 1966, 1966, 1982, 1982, 1983, 1983));
        System.out.println(solve(A));
    }

    public static int solve(ArrayList<Integer> A){
        int ans = 0;
        if (A.size() == 1) return A.get(0);
        int data0 = A.get(0);
        int data1 = A.get(1);
        if (data0 != data1)
            return A.get(0);
        int val1= A.get(A.size()-1);
        int val2 = A.get(A.size()-2);
        if (val1 != val2) {
            return A.get(A.size() - 1);
        }
        int l = 1;
        int h = A.size()-2;
        while (l<=h){
            int mid  = (l+h)/2;
            int actual = A.get(mid);
            int prev = A.get(mid-1);
            int next = A.get(mid+1);
            if (actual!=prev && actual!=next)
                return actual;
            else {
                if (actual == prev)
                    mid--;
                if (mid%2==0){
                    l = mid+2;
                }
                else {
                    h = mid-1;
                }
            }
        }
        return ans;
    }
}
